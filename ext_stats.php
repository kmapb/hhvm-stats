<?hh
/* Generated by grep/sed/awk'ing 'proto' in php_stats.cpp and copious hand-fiddling. */
<<__Native("ZendCompat")>> function stats_cdf_t(float $par1, float $par2, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_normal(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_gamma(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_chisquare(float $par1, float $par2, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_beta(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_binomial(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_noncentral_chisquare(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_f(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_noncentral_f(float $par1, float $par2, float $par3, float $par4, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_noncentral_t(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_negative_binomial(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_poisson(float $par1, float $par2, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_laplace(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_cauchy(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_logistic(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_weibull(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_uniform(float $par1, float $par2, float $par3, int $which): float;
<<__Native("ZendCompat")>> function stats_cdf_exponential(float $par1, float $par2, int $which): float;
<<__Native("ZendCompat")>> function stats_rand_setall(int $iseed1, int $iseed2): void;
<<__Native("ZendCompat")>> function stats_rand_getsd(): array<float>;
<<__Native("ZendCompat")>> function stats_rand_gen_iuniform(int $low, int $high): int;
<<__Native("ZendCompat")>> function stats_rand_gen_funiform(float $low, float $high): float;
<<__Native("ZendCompat")>> function stats_rand_ignlgi(): int;
<<__Native("ZendCompat")>> function stats_rand_ranf(): float;
<<__Native("ZendCompat")>> function stats_rand_gen_beta(float $a, float $b): float;
<<__Native("ZendCompat")>> function stats_rand_gen_chisquare(float $df): float;
<<__Native("ZendCompat")>> function stats_rand_gen_exponential(float $av): float;
<<__Native("ZendCompat")>> function stats_rand_gen_f(float $dfn, float $dfd): float;
<<__Native("ZendCompat")>> function stats_rand_gen_gamma(float $a, float $r): float;
<<__Native("ZendCompat")>> function stats_rand_gen_noncentral_chisquare(float $df, float $xnonc): float;
<<__Native("ZendCompat")>> function stats_rand_gen_noncenral_f(float $dfn, float $dfd, float $xnonc): float;
<<__Native("ZendCompat")>> function stats_rand_gen_normal(float $av, float $sd): float;
// XXXkma: array => array<float>
<<__Native("ZendCompat")>> function stats_rand_phrase_to_seeds(string $phrase): array<float>;
<<__Native("ZendCompat")>> function stats_rand_ibinomial(int $n, float $pp): int;
<<__Native("ZendCompat")>> function stats_rand_ibinomial_negative(int $n, float $p): int;
<<__Native("ZendCompat")>> function stats_rand_gen_ipoisson(float $mu): int;
<<__Native("ZendCompat")>> function stats_rand_gen_noncentral_t(float $df, float $xnonc): float;
<<__Native("ZendCompat")>> function stats_rand_gen_t(float $df): float;
<<__Native("ZendCompat")>> function stats_dens_normal(float $x, float $ave, float $stdev): float;
<<__Native("ZendCompat")>> function stats_dens_cauchy(float $x, float $ave, float $stdev): float;
<<__Native("ZendCompat")>> function stats_dens_laplace(float $x, float $ave, float $stdev): float;
<<__Native("ZendCompat")>> function stats_dens_logistic(float $x, float $ave, float $stdev): float;
<<__Native("ZendCompat")>> function stats_dens_beta(float $x, float $a, float $b): float;
<<__Native("ZendCompat")>> function stats_dens_weibull(float $x, float $a, float $b): float;
<<__Native("ZendCompat")>> function stats_dens_uniform(float $x, float $a, float $b): float;
<<__Native("ZendCompat")>> function stats_dens_chisquare(float $x, float $dfr): float;
<<__Native("ZendCompat")>> function stats_dens_t(float $x, float $dfr): float;
<<__Native("ZendCompat")>> function stats_dens_gamma(float $x, float $shape, float $scale): float;
<<__Native("ZendCompat")>> function stats_dens_exponential(float $x, float $scale): float;
<<__Native("ZendCompat")>> function stats_dens_f(float $x, float $dfr1, float $dfr2): float;
<<__Native("ZendCompat")>> function stats_dens_pmf_binomial(float $x, float $n, float $pi): float;
<<__Native("ZendCompat")>> function stats_dens_pmf_poisson(float $x, float $lb): float;
<<__Native("ZendCompat")>> function stats_dens_pmf_negative_binomial(float $x, float $n, float $pi): float;
<<__Native("ZendCompat")>> function stats_dens_pmf_hypergeometric(float $n1, float $n2, float $N1, float $N2): float;
<<__Native("ZendCompat")>> function stats_stat_powersum(array<num> $arr, float $power): float;
<<__Native("ZendCompat")>> function stats_stat_innerproduct(array<num> $arr1, array<num> $arr2): float;
<<__Native("ZendCompat")>> function stats_stat_independent_t(array<num> $arr1, array<num> $arr2): float;
<<__Native("ZendCompat")>> function stats_stat_paired_t(array<num> $arr1, array<num> $arr2): float;
<<__Native("ZendCompat")>> function stats_stat_percentile(array<num> $arr, float $perc): float;
<<__Native("ZendCompat")>> function stats_stat_correlation(array<num> $arr1, array<num> $arr2): float;
<<__Native("ZendCompat")>> function stats_stat_binomial_coef(int $x, int $n): float;
<<__Native("ZendCompat")>> function stats_stat_factorial(int $n): float;
<<__Native("ZendCompat")>> function stats_variance(array<num> $a, bool $sample = false): float;
<<__Native("ZendCompat")>> function stats_standard_deviation(array<num> $a, bool $sample = false): float;
<<__Native("ZendCompat")>> function stats_absolute_deviation(array<num> $a): float;
<<__Native("ZendCompat")>> function stats_harmonic_mean(array<num> $a): float;
<<__Native("ZendCompat")>> function stats_skew(array<num> $a): float;
<<__Native("ZendCompat")>> function stats_kurtosis(array<num> $a): float;
<<__Native("ZendCompat")>> function stats_covariance(array<num> $a, array<num> $b): float;
